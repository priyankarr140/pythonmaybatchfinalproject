{"name": "test_booking", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <test.testcases.test_e2e.TestBooking object at 0x000002C34174FB20>\n\n    def test_booking(self):\n        logs = self.get_logger()\n        try:\n            logs.debug('Browser launched')\n            db=DBConnectionFile()\n            data=db.dbconnect()\n            logs.debug('Website Launched')\n            time.sleep(12)\n>           driver.switch_to.active_element\nE           NameError: name 'driver' is not defined\n\ntest_e2e.py:24: NameError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test.testcases.test_e2e.TestBooking object at 0x000002C34174FB20>\n\n    def test_booking(self):\n        logs = self.get_logger()\n        try:\n            logs.debug('Browser launched')\n            db=DBConnectionFile()\n            data=db.dbconnect()\n            logs.debug('Website Launched')\n            time.sleep(12)\n            driver.switch_to.active_element\n            self.driver.execute_script(\"document.elementFromPoint(0,0).click()\")\n            time.sleep(5)\n            #login=LoginPage(self.driver)\n            #logs.debug('Phone Number Entered')\n            #login.usernameInputOption().send_keys(data[2])\n            #login.continueBtnOption().click()\n            #otp = input()\n            #logs.debug('OTP Entered')\n            #login.otpInputOption().send_keys(data[3])\n           # login.loginBtnOption().click()\n            self.driver.execute_script(\"document.elementFromPoint(0,0).click()\")\n            bookObj=BookingPage(self.driver)\n            bookObj.fromButtonOption().click()\n            bookObj.fromInputOption().send_keys(data[0])\n            bookObj.fromCityOption().click()\n            logs.debug('From city selected')\n            bookObj.toButtonOption().click()\n            bookObj.toInputOption().send_keys(data[1])\n            bookObj.toCityOption().click()\n            logs.debug('To city selected')\n            bookObj.nextBtnOption().click()\n            time.sleep(3)\n            dates = bookObj.dateChoicesOption()\n            for d in dates:\n                e = d.find_element(By.TAG_NAME, value=\"p\")\n                if e.text == '15':\n                    e.click()\n                    break\n            logs.debug('Date selected')\n            bookObj.classTravelOption().click()\n            bookObj.adultTktsOption().click()\n            bookObj.childTktsOption().click()\n            logs.debug('Passenger selected')\n            bookObj.applyTktsOption().click()\n            bookObj.searchFlightOption().click()\n            bookObj.adPopupOption().click()\n            self.takescreenshot(self.driver)\n            logs.debug('Successful booking')\n        except Exception as ex:\n>           logs.error(\"Exception occurred \",ex)\n\ntest_e2e.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1506: in error\n    self._log(ERROR, msg, args, **kwargs)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1624: in _log\n    self.handle(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1634: in handle\n    self.callHandlers(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1696: in callHandlers\n    hdlr.handle(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:968: in handle\n    self.emit(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\logging.py:331: in emit\n    super().emit(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1108: in emit\n    self.handleError(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:1100: in emit\n    msg = self.format(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:943: in format\n    return fmt.format(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\logging.py:92: in format\n    return super().format(record)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:678: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: mainfolder.utilities.BaseClass, 40, C:\\Users\\Priyanka Arora\\PycharmProjects\\maybatchproject\\test\\testcases\\test_e2e.py, 64, \"Exception occurred \">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\logging\\__init__.py:368: TypeError"}, "attachments": [{"name": "log", "source": "e2a1f52d-7866-417d-9d5e-7f36ac2cdb19-attachment.txt", "type": "text/plain"}], "start": 1690383779270, "stop": 1690383791531, "uuid": "91e4f004-0a12-4873-8114-36646096cded", "historyId": "f3714a59b3d9fc64d69092d0f9ec11ff", "testCaseId": "00729a1455ebf4eaeb2e3b812c926342", "fullName": "test_e2e.TestBooking#test_booking", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "test_e2e"}, {"name": "subSuite", "value": "TestBooking"}, {"name": "host", "value": "DESKTOP-A54I250"}, {"name": "thread", "value": "39188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_e2e"}]}